var lunrIndex = [{"id":"changelog","title":"Changelog","body":"All notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https:\/\/keepachangelog.com\/en\/1.0.0\/),\nand this project adheres to [Semantic Versioning](https:\/\/semver.org\/spec\/v2.0.0.html).\n\n## [Unreleased]\n\n- Nothing to list"},{"id":"completion","title":"Completing Tasks","body":"Give the following task markup:\n\n```html\n\n## Making Dessert\n\n- Measure the eggs and sugar into a bowl\n- Whip for 5 minutes until incorporated\n- Continue mixing the cookies...\n\n```\n\nTo mark this complete you do two things:\n\n1. Add the completion markup to the open tag.\n2. Run the `update` command.\n\n## Completion Markup\n\nAny of the following can be used to indicate completion of a task.\n\n```html\n\n```"},{"id":"readme","title":"Directio","body":"![Directio](..\/..\/images\/directio.jpg)\n\n> Directio is a tool to track tasks over time.\n\nProjects require regular updates. There can be lots of steps to remember, so we write a list of tasks. And then we follow the list each time we do an update. Just to be sure we miss nothing.\n\nAt the start of each update, one makes a duplicate of the tasklist, e.g. _today.md_. Scanning through _today.md_ one notices that some of the tasks have already been done, and are by nature non-recurring. Others recur, but sometimes at different intervals. It's tedius to have to follow along, when not all of the tasks apply to this moment. What if the duplicate somehow KNEW what didn't need to be done today, i.e., what was already completed, or what doesn't need to be done quite yet. What if those tasks were removed from the working file? **Hello Directio.**\n\n## Quick Start\n\n### Tasklist File Setup\n\n1. Locate your tasklist file(s) outside of your project, this assumes you want the same tasklist for multiple projects.\n2. Create at least one tasklist, e.g. _\/foo\/bar\/document.md_\n3. Add [Directio syntax](@syntax) to that document.\n\n### Project Usage\n\n1. In the shell, cd to your project root.\n2. `.\/vendor\/bin\/directio new \/foo\/bar\/document.md`\n3. Answer that you want to initialize your project.\n4. Open the created document and mark each task complete.\n5. Use `.\/vendor\/bin\/directio update` to flush the completed tasks from the file.\n\n### Next Time\n\n1. In the shell, cd to your project root.\n2. `.\/vendor\/bin\/directio new \/foo\/bar\/document.md`\n3. Open the created document and notice all completed tasks have been removed.\n4. Continue as before marking complete and updating."},{"id":"syntax","title":"Directio Syntax","body":"Each Directio _task_ is demarcated using two, specialized HTML comments, like so:\n\n```html\n\n# Foo Task\n...\n\n```\n\nA completed task is represented by one slight change. (Look familiar?, i.e., [Markdown task lists](https:\/\/www.markdownguide.org\/extended-syntax\/#task-lists))\n\n```html\n\n# Foo Task\n...\n\n```\n\n## Alternate Syntax\n\nInstead of `[x]` you can use boolean attributes (`done, complete`) like this:\n\n```html\n\n...\n```\n\n```html\n\n...\n```\n\n## Rules\n\n* Tasks must be wrapped with both an open `` and close comment ``.\n* Comment start \"``\" should be proceeded by a single space.\n* Open comments must have an `id` attribute.\n* Close comments must not have any attributes.\n* Attribute order is of no significance.\n* Attribute names must not contain spaces.\n    * CORRECT: ``\n    * incorrect: ``\n* Attributes values with spaces must be wrapped by double quotes.\n    * ``\n* Attributes may be name only (boolean true), e.g. `complete` as in ``.\n\n## Special Attributes\n\n| Meaning                  | Attributes                | Notes                                                   | Example                       |\n|--------------------------|---------------------------|---------------------------------------------------------|-------------------------------|\n| task identification      | `id`, `name`              | Must be unique within an initialized project.           | `foo`                         |\n| Complete only for a time | `expires`                 | datetime, or date period                                | `P1M`, `2025-01-23T15:23:37Z` |\n| Completed                | `done`, `complete`, `[x]` |                                                         |                               |\n| Incompleted              | `[]`, `[ ]`               | Optional, for clarity, as tasks are assumed incomplete. |                               |"},{"id":"phpstorm","title":"PHP Storm","body":"1. Settings > Editor > Code Style > Markdown\n2. Set _Keep maximum blank lines Around block elements_ to `0`\n3. Set _Minimum blank lines Around block elements_ to `0`"}]